{"version":3,"sources":["assets/logo.svg","services/api.ts","components/UfCity/index.tsx","components/UfCity/UfCity.tsx","components/DimmingScreenFindCity/index.tsx","components/DimmingScreenFindCity/DimmingScreenFindCity.tsx","pages/Home/index.tsx","components/Header/index.tsx","components/Header/Header.tsx","components/Card/index.tsx","components/Card/Card.tsx","pages/FindPoint/index.tsx","components/Maps/index.tsx","components/Maps/Maps.tsx","components/ContactData/index.tsx","components/ContactData/ContactData.tsx","components/SelectItems/index.tsx","components/SelectItems/SelectItems.tsx","components/DropZone/index.tsx","components/DropZone/DropZone.tsx","components/DimmingScreen/index.tsx","components/DimmingScreen/DimmingScreen.tsx","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","document","URL","UfCity","setCity","ufCity","useState","ufsList","setUfsList","citiesName","setCitiesName","useEffect","uf","get","then","response","citiesResponse","data","ufInitials","className","htmlFor","name","id","value","onChange","event","target","city","required","map","key","codigo_uf","codigo_ibge","DimmingScreenFindCity","setOpenDimming","setcity","onClick","to","pathname","search","Home","Dimming","setDimming","console","log","src","logo","alt","Header","props","Card","point","items","window","open","latitude","longitude","imageUrl","itemID","item","image_url","title","FindPoint","points","setPoints","setItems","params","URLSearchParams","location","pointResponse","itemsResponse","resp","length","Maps","setLatLon","initialPosition","setInitialPosition","positionSelected","setpositionSelected","navigator","geolocation","getCurrentPosition","position","coords","Map","center","zoom","onclick","latlng","lat","lng","TileLayer","attribution","url","Marker","ContactData","setData","handleInputChange","type","SelectItems","setitems","itemsSelected","setitemsSelected","findIndex","filteredItems","filter","handleSelectItem","includes","DropZone","setFile","fileUrlSelected","setfileUrlSelected","onDrop","useCallback","acceptedFiles","file","fileUrl","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","DimmingScreen","CreatePoint","email","whatsapp","contactData","setContactData","latLong","setLatLong","sucess","setSucess","image","setImage","a","preventDefault","FormData","append","String","join","post","status","onSubmit","Routes","component","path","exact","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fdce5f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL:document.URL\r\n})\r\n\r\nexport default api","import UfCity from './UfCity'\r\n\r\nexport default UfCity;","import React, {useState, useEffect, ChangeEvent} from 'react';\r\nimport { ufResponseI, citiesResponseI  } from '../../interfaces/backendInterfaces'\r\nimport api from '../../services/api'\r\nimport { prospsUfCityI } from '../../interfaces/appInterfaces';\r\n\r\n\r\nconst UfCity: React.FC<prospsUfCityI> = ({ setCity, ufCity }) => {\r\n\r\n    const [ufsList, setUfsList] = useState<ufResponseI[]>([])\r\n    const [citiesName, setCitiesName] = useState<citiesResponseI[]>([])\r\n\r\n    useEffect(() => {\r\n        if(ufCity.uf===\"\"){\r\n            return;\r\n        }\r\n        api.get<citiesResponseI[]>(`cities/${ufCity.uf}`)\r\n        .then(response =>{\r\n            const citiesResponse =  response.data\r\n            setCitiesName(citiesResponse)\r\n    })}, [ufCity])\r\n\r\n    useEffect(()=>{\r\n        api.get<ufResponseI[]>('uf')\r\n            .then((response) =>{\r\n                const ufInitials = response.data\r\n                setUfsList(ufInitials)\r\n            })\r\n    },[])\r\n\r\n\r\n    function handleSelectUf(event:ChangeEvent<HTMLSelectElement>){\r\n        setCity({uf:event.target.value, city:\"\"})\r\n    }\r\n    function handleSelectCity(event:ChangeEvent<HTMLSelectElement>){\r\n        setCity({...ufCity, city:event.target.value})\r\n    }\r\n\r\n  return (\r\n    <div className=\"field-group\">\r\n        <div className=\"field\">\r\n            <label htmlFor=\"uf\">Estado (uf)</label>\r\n            <select name=\"uf\" id=\"uf\" value={ufCity.uf} onChange={handleSelectUf} required>\r\n                <option value=\"\">Selecione seu Estado</option>\r\n                {ufsList.map(uf =>(\r\n                    <option key={uf.codigo_uf} value={uf.uf}>{uf.name}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n        <div className=\"field\">\r\n            <label htmlFor=\"city\">Cidade</label>\r\n            <select name=\"city\" id=\"city\" value={ufCity.city} onChange={handleSelectCity} required>\r\n                <option value=\"\">Selecione sua Cidade</option>\r\n                {citiesName.map(city =>(\r\n                    <option key={city.codigo_ibge} value={city.name}>{city.name}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UfCity;","import DimmingScreenFindCity from './DimmingScreenFindCity';\r\n\r\nexport default DimmingScreenFindCity","import React, { useState } from 'react';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom'\r\nimport UfCity from '../UfCity'\r\n\r\nimport { FiX  } from 'react-icons/fi'\r\nimport { propsDimmingScreenFindCityI, ufCityI } from '../../interfaces/appInterfaces'\r\n\r\n\r\nconst DimmingScreenFindCity: React.FC<propsDimmingScreenFindCityI> = ({ setOpenDimming }) => {\r\n  const [city, setcity] = useState<ufCityI>({uf:'', city:''})\r\n  return (\r\n        <div className=\"dimming\">\r\n          <button id=\"close\" onClick={()=>setOpenDimming(false)}><FiX /></button>\r\n          <div className=\"container\">\r\n            <UfCity ufCity={city} setCity={setcity} />\r\n            <Link to={{pathname: \"/find-point/\", search:`?uf=${city.uf}&city=${city.city}`}}>Buscar</Link>\r\n          </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default DimmingScreenFindCity;","import React, { useState } from 'react';\r\nimport logo from '../../assets/logo.svg'\r\nimport './styles.css'\r\nimport { FiLogIn, FiSearch } from 'react-icons/fi'\r\nimport { Link } from 'react-router-dom'\r\nimport DimmingScreenFindCity from '../../components/DimmingScreenFindCity'\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    const [Dimming, setDimming] = useState(false)\r\n    console.log(Dimming)\r\n\r\n  return(\r\n      <div id=\"page-home\">\r\n          {Dimming && <DimmingScreenFindCity setOpenDimming={setDimming} />}\r\n          <div className=\"content\">\r\n                <header>\r\n                    <img src={ logo } alt=\"Ecoleta\"/>\r\n                    <Link to=\"/create-point\">\r\n                        <span><FiLogIn /></span>\r\n                        <strong>Cadastre um ponto de coleta</strong>\r\n                    </Link>\r\n                </header>\r\n                <main>\r\n                    <h1>Seu Marketplace de coleta de Resíduos.</h1>\r\n                    <p>Ajudamos pessoas a encontrarem pontos de coleta de forma\r\n                        eficiente.\r\n                    </p>\r\n                    <a onClick={() => setDimming(true)}>\r\n                        <span><FiSearch /></span>\r\n                        <strong>Encontre um ponto de coleta</strong>\r\n                    </a>    \r\n                </main>\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import Header from \"./Header\";\r\n\r\nexport default Header;","import React  from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport logo  from '../../assets/logo.svg'\r\nimport './style.css'\r\n\r\nconst Header: React.FC = (props) => {\r\n\r\n  return (\r\n      <header>\r\n          <Link to=\"/\"><img src={ logo } alt=\"Ecoleta\"/></Link>\r\n          <Link to=\"/\">\r\n              <FiArrowLeft />\r\n              Voltar para a Home\r\n          </Link>\r\n      </header>)\r\n}\r\n\r\nexport default Header;","import Card from './Card';\r\n\r\nexport default Card","import React from 'react';\r\nimport { filterPointsI, itemsInterface } from '../../interfaces/backendInterfaces'\r\nimport './styles.css';\r\n\r\ninterface propsCardI{\r\n    point:filterPointsI\r\n    items:itemsInterface[]\r\n}\r\n\r\nconst Card: React.FC<propsCardI> = ({ point, items }) => {\r\n    console.log(point)\r\n    function handleClickCard(){\r\n        window.open(`https://maps.google.com/?q=${point.latitude},${point.longitude}`)\r\n    }\r\n  return(\r\n    <div className=\"card\" onClick={handleClickCard}>\r\n        <img src={point.imageUrl} alt=\"Imagem do Ponto\"/>\r\n        <div className=\"card-body\">\r\n            <h2>{point.name}</h2>\r\n            <p>{point.city}/{point.uf}</p>\r\n        </div>\r\n        <h3>Items coletados</h3>\r\n        <div className=\"card-item\">\r\n            {point.items.map(itemID => (\r\n                items.map(item=> item.id===itemID && (<div className=\"tooltip\">\r\n                <img src={item.image_url} alt={item.title}/>\r\n                <span className=\"tooltiptext\">{item.title}</span>\r\n            </div>))\r\n            ))}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React, {useEffect,  useState} from 'react';\r\nimport api  from '../../services/api'\r\nimport {RouteChildrenProps} from 'react-router-dom'\r\nimport Header from '../../components/Header'\r\nimport Card from '../../components/Card'\r\nimport { filterPointsI, itemsInterface } from '../../interfaces/backendInterfaces';\r\nimport './styles.css'\r\n\r\n\r\n\r\n\r\nconst FindPoint: React.FC<RouteChildrenProps> = (props) => {\r\n  const [points, setPoints] = useState<filterPointsI[]>([])\r\n  const [items, setItems] = useState<itemsInterface[]>([])\r\n  const params = new URLSearchParams(props.location.search)\r\n  const city = {uf:params.get('uf'), city:params.get('city')}\r\n\r\n  useEffect(() => {\r\n    api.get<filterPointsI[]>('points', { params:{\r\n      items:[1,2,3,4,5,6],\r\n      uf:city.uf,\r\n      city:city.city}}).then(response=>{\r\n        const pointResponse = response.data.map(point=>point)\r\n        setPoints(pointResponse)\r\n      })\r\n      api.get<itemsInterface[]>('items').then(response=>{\r\n        const itemsResponse = response.data.map(resp=>resp)\r\n        setItems(itemsResponse)\r\n      })\r\n  })\r\n\r\n\r\n  return(\r\n      <div id=\"page-find-point\">\r\n        <Header />\r\n        <div className=\"white-background\" />\r\n        <p className='points-find'><strong>{points.length}</strong> pontos foram encontrados.</p>\r\n        <div className=\"points-card\">\r\n        {points.map(point=>(<Card point={point} items={items} />))}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default FindPoint;","import Maps from './Maps'\r\n\r\nexport default Maps\r\n","import { LeafletMouseEvent } from \"leaflet\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\r\nimport api from '../../services/api';\r\nimport { prospsMapsI } from \"../../interfaces/appInterfaces\";\r\n\r\nconst Maps: React.FC<prospsMapsI> = ({setCity, ufCity, setLatLon}) => {\r\n\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([-11.3206707,-51.0105178])\r\n  const [positionSelected, setpositionSelected] = useState<[number, number]>([0,0])\r\n  \r\n  useEffect(()=>{\r\n    navigator.geolocation.getCurrentPosition(position=>{\r\n        const { latitude, longitude} = position.coords        \r\n        setInitialPosition([latitude, longitude])\r\n    })\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    if(ufCity.city===\"\"){\r\n      return;\r\n    }\r\n    api.get(`uf/${ufCity.uf}/city/${ufCity.city}`).then(\r\n      response => {\r\n        setInitialPosition([response.data.latitude, response.data.longitude])\r\n      }\r\n    )\r\n  }, [ufCity])\r\n\r\n  function handleSelectPosition(event:LeafletMouseEvent){\r\n    const latitude  = event.latlng.lat\r\n    const longitude = event.latlng.lng\r\n    setpositionSelected([ latitude, longitude])\r\n    if(setLatLon){\r\n      setLatLon([latitude,longitude])\r\n    }\r\n  }\r\n  return (\r\n    <Map center={initialPosition} zoom={15} onclick={handleSelectPosition}>\r\n        <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n\r\n        <Marker position={positionSelected} />\r\n    </Map>\r\n  )\r\n}\r\n\r\nexport default Maps;","import ContactData from './ContactData'\r\n\r\nexport default ContactData;","import React, { ChangeEvent } from 'react';\r\nimport { contactDataStateI } from \"../../interfaces/appInterfaces\";\r\n\r\nconst ContactData: React.FC<contactDataStateI>= ({ data, setData }) => {\r\n\r\n    function handleInputChange(event:ChangeEvent<HTMLInputElement>){\r\n        const { name, value} = event.target\r\n        setData({...data, [name]: value})\r\n    }\r\n    return (\r\n        <fieldset>\r\n            <legend>\r\n                <h2>Dados</h2>\r\n            </legend>\r\n            <div className=\"field\">\r\n                    <label htmlFor=\"name\" >Nome da Entidade</label>\r\n                    <input type=\"text\" name=\"name\" id =\"name\" onChange={handleInputChange} required/>\r\n            </div>\r\n            <div className=\"field-group\">\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id =\"email\" onChange={handleInputChange} required/>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                        <input type=\"text\" name=\"whatsapp\" id =\"whatsapp\" onChange={handleInputChange} required/>\r\n                    </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default ContactData;","import SelectItems from './SelectItems'\r\n\r\nexport default SelectItems","import React, { useState, useEffect } from 'react';\r\nimport api from '../../services/api'\r\nimport { itemsInterface } from \"../../interfaces/backendInterfaces\";\r\nimport { propsSelectItemsI } from \"../../interfaces/appInterfaces\";\r\nconst SelectItems: React.FC<propsSelectItemsI> = ({ setItems }) => {\r\n\r\n    const [items, setitems] = useState<itemsInterface[]>([])\r\n    const [itemsSelected, setitemsSelected] = useState<number[]>([])\r\n\r\n    useEffect(()=>{\r\n        api.get('items').then( response=>{\r\n            setitems(response.data)})},[])\r\n\r\n    function handleSelectItem(id:number){\r\n        const allreadySelectedItem = itemsSelected.findIndex(item=> item === id)\r\n        if(allreadySelectedItem >= 0 ){\r\n            const filteredItems = itemsSelected.filter(item=>item!==id)\r\n            setitemsSelected(filteredItems)\r\n            setItems(filteredItems)\r\n        }else{\r\n            setitemsSelected([...itemsSelected, id])\r\n            setItems([...itemsSelected, id])\r\n        }\r\n    }\r\n\r\n  return(\r\n    <ul className=\"items-grid\">\r\n    {items.map(item => (\r\n        <li key={item.id} onClick={() => handleSelectItem(item.id)}\r\n        className={itemsSelected.includes(item.id)? 'selected':\"\"}>\r\n            <img src={item.image_url} alt={item.title}/>\r\n            <span>{item.title}</span>\r\n        </li>)\r\n    )}\r\n</ul>\r\n  )\r\n}\r\n\r\nexport default SelectItems;","import DropZone from './DropZone';\r\n\r\nexport default DropZone","import React, { useCallback, useState } from 'react';\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { FiUpload } from 'react-icons/fi'\r\nimport { propsDropZoneI } from '../../interfaces/appInterfaces'\r\nimport './styles.css';\r\n\r\n\r\n\r\nconst DropZone: React.FC<propsDropZoneI> = ({ setFile }) => {\r\n\r\n    const [fileUrlSelected, setfileUrlSelected] = useState('')\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        const file = acceptedFiles[0]\r\n        const fileUrl = URL.createObjectURL(file)\r\n        setfileUrlSelected(fileUrl)\r\n        setFile(file)\r\n      }, [])\r\n      const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n  return(\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {fileUrlSelected ? <img src={fileUrlSelected}/> : ( <p> <FiUpload /> Imagem do Ponto de Coleta.</p> )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropZone;","import DimmingScreen from './DimmingScreen';\r\n\r\nexport default DimmingScreen","import React from 'react';\r\nimport { FiCheckCircle } from \"react-icons/fi\";\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom'\r\nconst DimmingScreen: React.FC = () => {\r\n  return (\r\n      <Link to=\"/\">\r\n        <div className=\"dimming\">\r\n          <FiCheckCircle />\r\n          <label>Ponto Cadastrado com Sucesso!</label>\r\n        </div>\r\n      </Link>\r\n  );\r\n}\r\n\r\nexport default DimmingScreen;","import React,  { FormEvent, useState }  from 'react';\r\nimport Header from \"../../components/Header\"\r\nimport Maps  from \"../../components/Maps\";\r\nimport UfCity from '../../components/UfCity'\r\nimport ContactData from '../../components/ContactData'\r\nimport SelectItems from '../../components/SelectItems'\r\nimport DropZone from '../../components/DropZone'\r\nimport DimmingScreen from '../../components/DimmingScreen'\r\nimport api from '../../services/api'\r\nimport './styles.css';\r\nimport { ufCityI, contactDataI } from '../../interfaces/appInterfaces'\r\n\r\nconst CreatePoint: React.FC = () => {\r\n\r\n    const [city, setcity] = useState<ufCityI>({uf:'', city:''})\r\n    const [contactData, setContactData] = useState<contactDataI>({name:'', email:'', whatsapp:''})\r\n    const [latLong, setLatLong] = useState<[number, number]>([0,0])\r\n    const [sucess, setSucess] = useState(false)\r\n    const [items, setItems] = useState<number[]>([])\r\n    const [image, setImage] = useState<File>()\r\n\r\n    async function handleSubmit(event:FormEvent){\r\n        event.preventDefault()\r\n        const data = new FormData()\r\n        data.append('name', contactData.name)\r\n        data.append('email', contactData.email)\r\n        data.append('whatsapp', contactData.whatsapp)\r\n        data.append('city', city.city)\r\n        data.append('uf', city.uf)\r\n        data.append('latitude', String(latLong[0]))\r\n        data.append('longitude', String(latLong[1]))\r\n        data.append('items', items.join(','))\r\n        if(image){\r\n            data.append('image', image)\r\n        }\r\n        await api.post('points', data).then( response =>{\r\n                if(response.status=200){\r\n                    setSucess(true)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n  return(\r\n    \r\n    <div id=\"page-create-point\">\r\n        {sucess && <DimmingScreen />}\r\n        <Header />\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>\r\n                Cadastro de Pontos de Coletas\r\n            </h1>\r\n\r\n            <DropZone setFile={setImage}/>\r\n            <ContactData data={contactData} setData={setContactData} />\r\n            <fieldset>\r\n                <legend>\r\n                    <div className=\"d-flex-betweeen\">\r\n                        <h2>Endereço</h2>\r\n                        <span>Selecione o Endereço no Mapa</span>\r\n                    </div>\r\n                </legend>   \r\n                <UfCity ufCity={city} setCity={setcity} />\r\n                <Maps ufCity={city} setCity={setcity} setLatLon={setLatLong}/>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>\r\n                    <div className=\"d-flex-betweeen\">\r\n                        <h2>Itens de Coleta</h2>\r\n                        <span>Selecione os items recebidos.</span>\r\n                    </div>\r\n                </legend>\r\n                <SelectItems setItems={setItems} />\r\n            </fieldset>\r\n            <button type=\"submit\">\r\n                Cadastrar Ponto de Coleta\r\n            </button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CreatePoint;","import { Route, BrowserRouter } from 'react-router-dom'\r\nimport React from 'react';\r\nimport Home from './pages/Home/index'\r\nimport FindPoint from './pages/FindPoint'\r\nimport CreatePoint from './pages/CreatePoint/index'\r\n\r\nconst Routes: React.FC = () => {\r\n  return(\r\n      <BrowserRouter>\r\n          <Route  component= {Home} path=\"/\" exact/>\r\n          <Route  component= {CreatePoint} path=\"/create-point\" />\r\n          <Route component={FindPoint} path=\"/find-point/\" />\r\n      </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './routes'\n\n\nfunction App() {\n  return(\n  <Routes />\n  )\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}